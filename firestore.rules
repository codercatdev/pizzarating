rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /events/{eventId} {
    	allow read: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.resource.data.createdBy == request.auth.uid;
      allow update, delete: if request.auth != null
        && resource.data.createdBy == request.auth.uid
        && request.resource.data.createdBy == request.auth.uid;
    }
    match /pizzas/{pizzaId} {
    	allow read: if request.auth != null && isEventParticipant();
      allow update, delete: if request.auth != null && isEventCreator();
    }
    
    match /ratings/{ratingId} {
    	allow read: if request.auth != null && isEventParticipant();
      allow update, delete: if request.auth != null && isEventParticipant()
      	&& resource.data.userId == request.auth.uid
        && request.resource.data.userId == request.auth.uid;
    }
    
    function getEventData() {
      return get(/databases/$(database)/documents/events/$(resource.data.eventId)).data;
    }
    function isEventParticipant() {
      return request.auth.uid in getEventData().participants;
    }

    function isEventCreator() {
      return request.auth.uid == getEventData().createdBy;
    }
  }
}